{"version":3,"sources":["model/logoAnimation.js","components/Logo.js","App.js","serviceWorker.js","index.js"],"names":["logoAnimation","setInterval","i","document","getElementsByClassName","iFirstTop","firstElementChild","style","iFirstBottom","lastElementChild","iSecondTop","iSecondBottom","transition","setTimeout","top","height","Logo","props","react_default","a","createElement","className","App","components_Logo","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+NAoEeA,MApEf,WAEIC,YAAY,WACR,IAAIC,EAAIC,SAASC,uBAAuB,KAGpCC,EAAYH,EAAE,GAAGI,kBAAkBC,MACnCC,EAAeN,EAAE,GAAGO,iBAAiBF,MACrCG,EAAaR,EAAE,GAAGI,kBAAkBC,MACpCI,EAAgBT,EAAE,GAAGO,iBAAiBF,MAE1CF,EAAUO,WAAa,cACvBJ,EAAaI,WAAa,cAC1BF,EAAWE,WAAa,cACxBD,EAAcC,WAAa,cAE3BC,WACI,WACIA,WAAW,WACPR,EAAUS,IAAM,OAChBN,EAAaO,OAAS,OACtBL,EAAWI,IAAM,OACjBH,EAAcI,OAAS,QACzB,MAEV,KAEAF,WACI,WACIR,EAAUO,WAAa,gBACvBF,EAAWE,WAAa,cACxBJ,EAAaI,WAAa,gBAC1BD,EAAcC,WAAa,gBAE3BC,WAAW,WACPR,EAAUS,IAAM,MAChBN,EAAaO,OAAS,OACtBL,EAAWI,IAAM,MACjBH,EAAcI,OAAS,QACzB,KAEFF,WAAW,WACPR,EAAUS,IAAM,OAChBN,EAAaO,OAAS,MACtBL,EAAWI,IAAM,OACjBH,EAAcI,OAAS,OACzB,KAEFF,WAAW,WACPR,EAAUO,WAAa,gBACvBF,EAAWE,WAAa,iBAC1B,KAEFC,WAAW,WACPR,EAAUS,IAAM,QAChBN,EAAaO,OAAS,OACtBL,EAAWI,IAAM,QACjBH,EAAcI,OAAS,QACzB,KAEFF,WAAW,WACPR,EAAUS,IAAM,MAChBJ,EAAWI,IAAM,OACnB,MAEV,OACD,MC3CQE,MApBf,SAAcC,GAEV,OADAjB,IAEIkB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,KAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,KAAf,QCCDC,gOARP,OACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACG,EAAD,cAREC,aCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAAS7B,SAAS8B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9fa90c5a.chunk.js","sourcesContent":["function logoAnimation() {\n\n    setInterval(function(){\n        let i = document.getElementsByClassName('I');\n\n        //style of i\n        let iFirstTop = i[0].firstElementChild.style;\n        let iFirstBottom = i[0].lastElementChild.style;\n        let iSecondTop = i[1].firstElementChild.style;\n        let iSecondBottom = i[1].lastElementChild.style;\n\n        iFirstTop.transition = \"all 5s ease\";\n        iFirstBottom.transition = \"all 4s ease\";\n        iSecondTop.transition = \"all 9s ease\";\n        iSecondBottom.transition = \"all 7s ease\";\n\n        setTimeout(\n            function(){\n                setTimeout(function logoAnim() {\n                    iFirstTop.top = 20 + 'px';\n                    iFirstBottom.height = 15 + 'px';\n                    iSecondTop.top = 20 + 'px';\n                    iSecondBottom.height = 15 + 'px';\n                },100)\n            },\n        100);\n\n        setTimeout(\n            function(){\n                iFirstTop.transition = \"all 0.8s ease\";\n                iSecondTop.transition = \"all 1s ease\";\n                iFirstBottom.transition = \"all 0.1s ease\";\n                iSecondBottom.transition = \"all 0.3s ease\";\n\n                setTimeout(function logoAnim() {\n                    iFirstTop.top = 0 + 'px';\n                    iFirstBottom.height = 54 + 'px';\n                    iSecondTop.top = 0 + 'px';\n                    iSecondBottom.height = 54 + 'px';\n                },100);\n\n                setTimeout(function logoAnim() {\n                    iFirstTop.top = 20 + 'px';\n                    iFirstBottom.height = 0 + 'px';\n                    iSecondTop.top = 20 + 'px';\n                    iSecondBottom.height = 0 + 'px';\n                },300);\n\n                setTimeout(function logoAnim() {\n                    iFirstTop.transition = \"all 0.2s ease\";\n                    iSecondTop.transition = \"all 0.3s ease\";\n                },400);\n\n                setTimeout(function logoAnim() {\n                    iFirstTop.top = -10 + 'px';\n                    iFirstBottom.height = 54 + 'px';\n                    iSecondTop.top = -10 + 'px';\n                    iSecondBottom.height = 54 + 'px';\n                },500);\n\n                setTimeout(function logoAnim() {\n                    iFirstTop.top = 0 + 'px';\n                    iSecondTop.top = 0 + 'px';\n                },700);\n            },\n        7890);\n    }, 10000);\n}\nexport default logoAnimation\n","import React from 'react'\nimport logoAnimation from '../model/logoAnimation'\n\nfunction Logo(props) {\n    logoAnimation()\n    return (\n        <div>\n            <div className=\"logo\">\n                <div className=\"M\">m</div>\n                <div className=\"I first\">\n                    <div className=\"tItem\"></div>\n                    <div className=\"bItem\"></div>\n                </div>\n                <div className=\"I second\">\n                    <div className=\"tItem\"></div>\n                    <div className=\"bItem\"></div>\n                </div>\n                <div className=\"O\">o</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Logo\n","import React, { Component } from 'react';\nimport './view/css/App.css';\nimport Logo from './components/Logo'\n\nclass App extends Component {\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Logo />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}